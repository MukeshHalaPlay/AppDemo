<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-13T17:13:46 IST" name="Loan Department" finished-at="2021-10-13T17:13:46 IST" duration-ms="98">
    <groups>
      <group name="Smoke">
        <method signature="day2.Demo3()[pri:0, instance:demoPac.day2@49c7b90e]" name="Demo3" class="demoPac.day2"/>
        <method signature="day4.MobileLogInHomeLoan()[pri:0, instance:demoPac.day4@10d307f1]" name="MobileLogInHomeLoan" class="demoPac.day4"/>
        <method signature="day3.MobileLogInCarLoan()[pri:0, instance:demoPac.day3@3ee37e5a]" name="MobileLogInCarLoan" class="demoPac.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2021-10-13T17:13:46 IST" name="Personal Loan" finished-at="2021-10-13T17:13:46 IST" duration-ms="39">
      <class name="demoPac.day2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:demoPac.day2@49c7b90e]" started-at="2021-10-13T17:13:46 IST" name="prerequisite" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="Demo3()[pri:0, instance:demoPac.day2@49c7b90e]" started-at="2021-10-13T17:13:46 IST" name="Demo3" finished-at="2021-10-13T17:13:46 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
      </class> <!-- demoPac.day2 -->
      <class name="demoPac.day1">
        <test-method signature="Demo1()[pri:0, instance:demoPac.day1@2053d869]" started-at="2021-10-13T17:13:46 IST" name="Demo1" finished-at="2021-10-13T17:13:46 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at demoPac.day1.Demo1(day1.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo1 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:demoPac.day1@2053d869]" started-at="2021-10-13T17:13:46 IST" name="afterTest" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- demoPac.day1 -->
      <class name="demoPac.day4">
        <test-method signature="ApiLogInHomeLoan()[pri:0, instance:demoPac.day4@10d307f1]" started-at="2021-10-13T17:13:46 IST" name="ApiLogInHomeLoan" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApiLogInHomeLoan -->
        <test-method signature="MobileLogInHomeLoan()[pri:0, instance:demoPac.day4@10d307f1]" started-at="2021-10-13T17:13:46 IST" name="MobileLogInHomeLoan" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogInHomeLoan -->
        <test-method signature="WebLogInHomeLoan(java.lang.String)[pri:0, instance:demoPac.day4@10d307f1]" started-at="2021-10-13T17:13:46 IST" name="WebLogInHomeLoan" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[========www.personalloan.com===========]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLogInHomeLoan -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:demoPac.day4@10d307f1]" started-at="2021-10-13T17:13:46 IST" name="afterClass" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- demoPac.day4 -->
    </test> <!-- Personal Loan -->
    <test started-at="2021-10-13T17:13:46 IST" name="Car Loan" finished-at="2021-10-13T17:13:46 IST" duration-ms="14">
      <class name="demoPac.day1">
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:demoPac.day1@2053d869]" started-at="2021-10-13T17:13:46 IST" name="afterSuite" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- demoPac.day1 -->
      <class name="demoPac.day3">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="beforeSuite" finished-at="2021-10-13T17:13:46 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="beforeClass" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="beforeMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileLogInCarLoan()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="MobileLogInCarLoan" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogInCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="afterMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="beforeMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1st UserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1st Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="afterMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="beforeMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2nd UserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2nd Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="afterMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="MobileSignOutCarLoan" data-provider="getData" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3rd UserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3rd Password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="beforeMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="beforeMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="afterMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="WebLogInCarLoan(java.lang.String,java.lang.String)[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="WebLogInCarLoan" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[========www.carloan.com===========]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLogInCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:demoPac.day3@3ee37e5a]" started-at="2021-10-13T17:13:46 IST" name="afterMethod" finished-at="2021-10-13T17:13:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- demoPac.day3 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
